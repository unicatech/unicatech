name: Validate Pull Request
on:
  pull_request:
jobs:
  deploy:
    name: Validate Pull Request (unit tests)
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Load cached $HOME/.local
        uses: actions/cache@v3.2.6
        with:
          path: ~/.local
          key: dotlocal-${{ runner.os }}-${{ hashFiles('.github/workflows/deploy-pr.yaml') }}

      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          version: 1.3.2
          virtualenvs-path: .venv
          installer-parallel: true

      - name: Load cached poetry venv
        id: cached-poetry-venv
        uses: actions/cache@v3.2.6
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ hashFiles('**/poetry.lock') }}-${{ hashFiles('.github/workflows/deploy-pr.yaml') }}

      - name: Install dependencies using poetry (skipped on cache hit)
        run: poetry install
        if: steps.cached-poetry-venv.outputs.cache-hit != 'true'

      - name: Test code
        run: poetry run pytest --cov=./

      - name: Run code quality checks (black)
        run:  poetry run black --check .

      - name: Run code quality checks (isort)
        run:  poetry run isort --check .

      - name: Run code quality checks (flake8)
        run:  poetry run flake8 .

#      - name: Run static code analysis (mypy)
#        run:  poetry run mypy .
